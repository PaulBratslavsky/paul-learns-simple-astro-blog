---
import qs from "qs";
import { flattenAttributes, getStrapiMedia } from "../../../lib/utils";
import { Pagination } from "accessible-astro-components";

import Layout from "../../../layouts/Layout.astro";
import fetchApi from "../../../lib/strapi";

import ButtonLink from "../../../components/ButtonLink.astro";

interface Article {
  id: string;
  title: string;
  description: string;
  slug: string;
  image: {
    url: string;
    alternativeText: string;
  };
}

interface Page {
  data: Article[];
  url: {
    prev: string;
    next: string;
  };
  total: number;
  size: number;
  currentPage: number;
}

export async function getStaticPaths({ paginate }: { paginate: (items: Article[], options: { pageSize: number }) => any }): Promise<any> {
  const query = qs.stringify({
    sort: ["title:asc"],
    filters: {
      tag: {
        $eq: "my-cms-corner",
      },
      // category: {
      //   $eq: "strapi",
      // },
    },
    populate: {
      posts: {
        populate: {
          image: {
            fields: ["url", "alternativeText"],
          },
        },
      },
    },

    publicationState: "live",
    locale: ["en"],
  });

  const response = await fetchApi<Article[]>({
    endpoint: "post-groups",
    query: query,
  });


  const flattenedResponse = flattenAttributes(response);
  console.dir(flattenedResponse);

  if (flattenedResponse.error) return Astro.redirect("/404");
  const articles = flattenedResponse?.data[0]?.posts?.data;
  return paginate(articles, { pageSize: 9 });
}

const { page } = Astro.props as { page: Page };

---

<Layout title="Articles" description="All articles">
  <!--...::: Portfolio Section Start :::... -->
  <div class="section-portfolio">
    <!-- Section Space -->
    <div class="section-space">
      <!-- Section Container -->
      <div class="container-default">
        <!-- Tab Button Menu -->
        <div class="flex flex-wrap justify-center gap-3 md:gap-6">
          <ButtonLink href="/blog" text="All" />
          <ButtonLink href="/blog/strapi" text="Strapi" />
        </div>
        <!-- Tab Button Menu -->

        <!-- Portfolio Area -->
        <div class="my-10 lg:my-[60xp] xl:my-20">
          <!-- Portfolio List -->
          <div
            class="tab-content grid gap-8 sm:grid-cols-2 lg:grid-cols-3"
            id="show-all"
          >
            {
              page.data.map((article: Article) => {
                const { title, slug, description, image } = article;
                return (
                  <div class="jos">
                    <div class="group">
                      <div class="hover-solid-shadow">
                        <div class="overflow-hidden rounded-[10px] h-[250px]">
                          <img
                            src={getStrapiMedia(image.url)}
                            alt="portfolio-modern-img-1"
                            width="406"
                            height="350"
                            class="h-full w-full object-cover transition-all duration-300 ease-in-out group-hover:scale-105"
                          />
                        </div>
                      </div>
                      <div class="mt-8">
                        <div class="mb-3 flex flex-wrap gap-2 text-xl leading-[1.33] -tracking-[0.5px] text-ColorBlack group-hover:text-ColorBlack lg:flex-nowrap xl:text-2xl">
                          <a href={"/blog/" + slug} class="hover:text-ColorBlack ">
                            {title}
                          </a>
                        </div>
                        <p class="line-clamp-2 text-base sm:max-w-[350px]">
                          {description}
                        </p>
                      </div>
                    </div>
                  </div>
                );
              })
            }
          </div>
          <!-- Portfolio List -->
        </div>
        <!-- Portfolio Area -->

        <div class="flex justify-center">
          <Pagination
            firstPage={page.url.prev ? "/blog" : null}
            previousPage={page.url.prev ? page.url.prev : null}
            nextPage={page.url.next ? page.url.next : null}
            lastPage={page.url.next
              ? `/blog/${Math.round(page.total / page.size)}`
              : null}
            currentPage={page.currentPage}
            totalPages={Math.round(page.total / page.size)}
          />
        </div>
      </div>
      <!-- Section Container -->
    </div>
    <!-- Section Space -->
  </div>
  <!--...::: Portfolio Section End :::... -->
</Layout>
